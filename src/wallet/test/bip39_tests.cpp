// Copyright (c) 2018 ObEN, Inc.
// Distributed under the MIT software license, see the accompanying
// file COPYING or http://www.opensource.org/licenses/mit-license.php.

#include <inttypes.h>
#include <stdio.h>
#include <memory.h>
//#include "config/paicoin-config.h"
//#include "wallet/wallet.h"
#include "wallet/bip39mnemonic.h"

#define SEED_LEN 64
#define PASS_PHRASE NULL

struct TestData {
    const char *phrase;
    uint8_t seed[SEED_LEN];
};

struct TestData testDataGood[10] = {
    { .phrase = "radio original daring aunt hold arrow earn absent spirit solve outer juice",
      .seed = {0x7a, 0xe0, 0xd7, 0x79, 0xd9, 0x4b, 0xc3, 0x14, 0xbf, 0xc4, 0x8c, 0x2b, 0x90, 0x3, 0xf9, 0x69, 0x80, 0x37, 0xd4, 0x95, 0x2c, 0x64, 0xf4, 0x93, 0x60, 0xdf, 0x52, 0x44, 0x45, 0x37, 0xac, 0xa9, 0xad, 0x7, 0x13, 0xb4, 0xc1, 0x45, 0xbc, 0x9a, 0xe3, 0x87, 0xcf, 0x4f, 0x7e, 0x11, 0x1d, 0xe8, 0x1e, 0x6f, 0x49, 0x32, 0x36, 0x3b, 0x66, 0xaf, 0x49, 0xa4, 0xee, 0x71, 0x9, 0xbc, 0xcc, 0xc5}},
    { .phrase = "choose toe ripple foster pupil wheat oval usual pelican fan artist govern",
      .seed = {0xa9, 0x7, 0x8c, 0x3e, 0x45, 0x55, 0x9, 0x1c, 0x8c, 0x81, 0xd0, 0xdc, 0x4f, 0xb0, 0x7d, 0x23, 0x4a, 0xdf, 0x19, 0xc8, 0x1a, 0x32, 0xdd, 0xc5, 0x28, 0xe, 0xb, 0xfb, 0x99, 0x57, 0x23, 0x15, 0x21, 0xb, 0xc1, 0xea, 0x63, 0x96, 0xfd, 0xb1, 0x90, 0xd7, 0x58, 0xa3, 0x9e, 0x76, 0xe, 0x27, 0x96, 0xad, 0x9, 0x31, 0xa7, 0x1d, 0xa7, 0x52, 0x97, 0xb, 0x1, 0xec, 0xff, 0xfa, 0x91, 0xfa}},
    { .phrase = "chaos hint mixed term pond enrich village deliver unfold text claw army",
      .seed = {0xa3, 0x65, 0x6b, 0x60, 0x1, 0x47, 0x5b, 0x9c, 0xa8, 0x13, 0xd0, 0x25, 0x28, 0x94, 0x99, 0x61, 0x4d, 0x18, 0x7c, 0x1c, 0x84, 0x63, 0x7, 0x4, 0x62, 0xbb, 0x52, 0xe8, 0x9a, 0x7d, 0x3a, 0x69, 0xf2, 0xef, 0x2c, 0x33, 0xfb, 0xfd, 0x31, 0x66, 0x58, 0xae, 0x5, 0x12, 0x8c, 0xc0, 0xbb, 0xb7, 0xff, 0x26, 0x95, 0x7c, 0x1b, 0x5a, 0x77, 0xa6, 0xd4, 0xad, 0x88, 0x7e, 0x72, 0xba, 0x17, 0x81}},
    { .phrase = "zoo mosquito noodle party fossil clerk submit capable rebel umbrella allow differ",
      .seed = {0x92, 0x22, 0x25, 0xe3, 0x98, 0x4, 0xed, 0x74, 0x37, 0xc5, 0x4e, 0x18, 0xbe, 0x27, 0xbb, 0x76, 0xbc, 0x25, 0xb1, 0x4d, 0x53, 0xe5, 0x86, 0xf5, 0x9d, 0x65, 0xfc, 0xaa, 0x6a, 0xe8, 0x60, 0xd0, 0x9a, 0x63, 0xb1, 0xcf, 0xb2, 0xe6, 0xc, 0xe4, 0x11, 0x4f, 0xfd, 0x60, 0x89, 0x54, 0xa2, 0xdc, 0x68, 0x28, 0x7c, 0x35, 0x21, 0xe7, 0x4, 0xc7, 0xd, 0x6a, 0xf1, 0x79, 0xed, 0x2, 0x9b, 0x35}},
    { .phrase = "chuckle assist carpet holiday power sea sadness assault pony mixture rate target",
      .seed = {0xdd, 0xa9, 0x40, 0x91, 0x9b, 0x6d, 0x32, 0x7a, 0xd6, 0x40, 0x1c, 0xb2, 0x13, 0x44, 0xdc, 0x64, 0x3c, 0x81, 0x15, 0xf8, 0xb1, 0x7b, 0xb8, 0x4b, 0x21, 0x17, 0xbb, 0x29, 0x4, 0xf9, 0xbb, 0x6c, 0x10, 0xe9, 0xb8, 0xcd, 0xb6, 0x6e, 0xbd, 0x57, 0x19, 0xd7, 0x68, 0x4a, 0x83, 0x47, 0x2, 0x37, 0xae, 0xe1, 0x7e, 0xca, 0xc5, 0xac, 0x2, 0x83, 0xe7, 0xaa, 0xb9, 0x7, 0x8, 0x4d, 0xad, 0x6b}},
    { .phrase = "reopen obey myth burger loud wisdom flight vast response mutual today bag",
      .seed = {0xe6, 0xec, 0xab, 0x97, 0x3, 0x62, 0x2d, 0x60, 0x31, 0x83, 0x2e, 0x2f, 0x2a, 0x7a, 0xaf, 0xd, 0x21, 0xf0, 0x27, 0xf5, 0x28, 0x32, 0xea, 0x73, 0x68, 0x88, 0xc1, 0x9b, 0x5c, 0xfa, 0xf7, 0x9f, 0x54, 0xca, 0x91, 0xdb, 0x80, 0xcd, 0x6a, 0xd2, 0x9e, 0x8, 0xa1, 0x4e, 0xb2, 0x8d, 0x88, 0x17, 0xfd, 0x53, 0x7c, 0x62, 0x3d, 0x32, 0xe1, 0x5b, 0xd, 0xb7, 0x20, 0xd1, 0x35, 0x1c, 0x51, 0xef}},
    { .phrase = "auto sand fence spread husband model inspire wisdom lift thunder winter jeans",
      .seed = {0xd8, 0x62, 0x78, 0x82, 0x8c, 0x79, 0x19, 0x37, 0xc, 0x67, 0xe6, 0xac, 0xc5, 0x33, 0xc9, 0x54, 0x47, 0xd9, 0x65, 0x99, 0x71, 0x3c, 0xd1, 0x76, 0x8, 0x4e, 0x5d, 0xef, 0x5, 0xd1, 0x6f, 0xea, 0x51, 0x90, 0xec, 0xf, 0xfa, 0x1b, 0x75, 0xbd, 0x7c, 0x98, 0xae, 0x9e, 0x99, 0xa1, 0x89, 0x8b, 0x58, 0x78, 0x35, 0x4f, 0x8d, 0x1d, 0x86, 0x43, 0x69, 0xa9, 0x2c, 0xb3, 0xc7, 0xb8, 0x9c, 0x89}},
    { .phrase = "begin blame airport this trap real essence invest admit retire deer such",
      .seed = {0x5e, 0xdb, 0x3, 0x6d, 0x36, 0x48, 0xc3, 0x9d, 0xe9, 0x79, 0xab, 0x8e, 0xab, 0x60, 0x33, 0x8c, 0x9a, 0x12, 0xf6, 0x59, 0x64, 0x44, 0xae, 0x9a, 0xcb, 0xac, 0xb1, 0xf0, 0x44, 0x94, 0x74, 0xce, 0xc2, 0x26, 0xe4, 0x58, 0x24, 0x5a, 0x70, 0x6c, 0x40, 0xcf, 0xfc, 0x1e, 0x46, 0xf5, 0x97, 0x6e, 0x81, 0xd4, 0xf9, 0xbf, 0xfd, 0xa1, 0xa4, 0x89, 0x28, 0x3b, 0x96, 0xb4, 0xcd, 0x2d, 0x83, 0x62}},
    { .phrase = "goat sun unable sheriff become require coyote immune ranch foot gospel river",
      .seed = {0xf2, 0x9, 0x4a, 0x3, 0x5, 0x95, 0x85, 0xce, 0x5b, 0xc6, 0xf1, 0x7a, 0x8b, 0x4c, 0x3b, 0xb4, 0x8d, 0x9f, 0x87, 0xc7, 0x0, 0x73, 0x8c, 0x41, 0x41, 0x3e, 0x13, 0xf9, 0x7a, 0x69, 0x45, 0x44, 0x2d, 0x18, 0xea, 0x1e, 0xf2, 0x9a, 0x25, 0x9f, 0xb9, 0xe0, 0x9b, 0xeb, 0xc7, 0xdc, 0x57, 0xa8, 0x6e, 0xc3, 0x27, 0x71, 0xba, 0xf1, 0xb, 0x14, 0x79, 0xa6, 0x7a, 0x98, 0xdd, 0xcf, 0xd3, 0x14}},
    { .phrase = "situate leaf frequent memory timber multiply ethics cake sorry earth corn such",
      .seed = {0x88, 0x28, 0x71, 0x2f, 0xcb, 0x63, 0x7b, 0x8d, 0xc5, 0xa3, 0xbb, 0x7f, 0xc8, 0x52, 0x75, 0x6b, 0xa3, 0x18, 0x6d, 0x29, 0x2, 0x18, 0xfa, 0x45, 0xf9, 0x42, 0xc3, 0xc2, 0x10, 0x4a, 0x5e, 0x90, 0x4b, 0x4, 0x71, 0x56, 0x55, 0x4, 0x76, 0xdb, 0xf6, 0x82, 0x82, 0x60, 0xc3, 0xc9, 0x54, 0x84, 0x75, 0xbf, 0xa5, 0x82, 0xb5, 0x38, 0x26, 0xc6, 0x77, 0x5e, 0xc2, 0x95, 0x3b, 0xe4, 0x5a, 0xdd}}
};

struct TestData testDataBad[10] = {
    { .phrase = "radio original daring aunt hold arrow earn absent spirit solve outer juice ",
      .seed = {0x7a, 0xe0, 0xd7, 0x79, 0xd9, 0x4b, 0xc3, 0x14, 0xbf, 0xc4, 0x8c, 0x2b, 0x90, 0x3, 0xf9, 0x69, 0x80, 0x37, 0xd4, 0x95, 0x2c, 0x64, 0xf4, 0x93, 0x60, 0xdf, 0x52, 0x44, 0x45, 0x37, 0xac, 0xa9, 0xad, 0x7, 0x13, 0xb4, 0xc1, 0x45, 0xbc, 0x9a, 0xe3, 0x87, 0xcf, 0x4f, 0x7e, 0x11, 0x1d, 0xe8, 0x1e, 0x6f, 0x49, 0x32, 0x36, 0x3b, 0x66, 0xaf, 0x49, 0xa4, 0xee, 0x71, 0x9, 0xbc, 0xcc, 0xc5}},
    { .phrase = "choose toe ripple foster pupil weat oval usual pelican fan artist govern",
      .seed = {0xa9, 0x7, 0x8c, 0x3e, 0x45, 0x55, 0x9, 0x1c, 0x8c, 0x81, 0xd0, 0xdc, 0x4f, 0xb0, 0x7d, 0x23, 0x4a, 0xdf, 0x19, 0xc8, 0x1a, 0x32, 0xdd, 0xc5, 0x28, 0xe, 0xb, 0xfb, 0x99, 0x57, 0x23, 0x15, 0x21, 0xb, 0xc1, 0xea, 0x63, 0x96, 0xfd, 0xb1, 0x90, 0xd7, 0x58, 0xa3, 0x9e, 0x76, 0xe, 0x27, 0x96, 0xad, 0x9, 0x31, 0xa7, 0x1d, 0xa7, 0x52, 0x97, 0xb, 0x1, 0xec, 0xff, 0xfa, 0x91, 0xfa}},
    { .phrase = "chaos hint mixed term pond enrich village deliver unfold text claw army",
      .seed = {0x44, 0x9, 0x55, 0x5f, 0x7f, 0x1c, 0x3d, 0x6d, 0x12, 0x86, 0x49, 0x6f, 0x9e, 0x23, 0x84, 0xd9, 0xa9, 0xd0, 0x8d, 0x22, 0x23, 0x75, 0x9a, 0x6f, 0x74, 0x54, 0xa8, 0xaf, 0x94, 0x6c, 0x72, 0xf7, 0x21, 0x64, 0x69, 0x9f, 0x6d, 0xc6, 0x86, 0x10, 0x96, 0x1a, 0x16, 0xb4, 0x0, 0xc, 0xd3, 0x7a, 0xea, 0x59, 0x8f, 0x61, 0xd4, 0x27, 0x30, 0x11, 0xdc, 0x96, 0x2a, 0xc0, 0xe3, 0x43, 0x2e, 0x65}},
    { .phrase = "zoo mosquito noodle party fossil clerk submit capable rebel umbrella allow differ",
      .seed = {0x92, 0x22, 0x25, 0xe3, 0x98, 0x4, 0xed, 0x74, 0x37, 0xc5, 0x01, 0x18, 0xbe, 0x27, 0xbb, 0x76, 0xbc, 0x25, 0xb1, 0x4d, 0x53, 0xe5, 0x86, 0xf5, 0x9d, 0x65, 0xfc, 0xaa, 0x6a, 0xe8, 0x60, 0xd0, 0x9a, 0x63, 0xb1, 0xcf, 0xb2, 0xe6, 0xc, 0xe4, 0x11, 0x4f, 0xfd, 0x60, 0x89, 0x54, 0xa2, 0xdc, 0x68, 0x28, 0x7c, 0x35, 0x21, 0xe7, 0x4, 0xc7, 0xd, 0x6a, 0xf1, 0x79, 0xed, 0x2, 0x9b, 0x35}},
    { .phrase = "chuckle assist carpet holiday power sea sadness assault pony mixture rate target",
      .seed = {0x00, 0x00, 0x40, 0x91, 0x9b, 0x6d, 0x32, 0x7a, 0xd6, 0x40, 0x1c, 0xb2, 0x13, 0x44, 0xdc, 0x64, 0x3c, 0x81, 0x15, 0xf8, 0xb1, 0x7b, 0xb8, 0x4b, 0x21, 0x17, 0xbb, 0x29, 0x4, 0xf9, 0xbb, 0x6c, 0x10, 0xe9, 0xb8, 0xcd, 0xb6, 0x6e, 0xbd, 0x57, 0x19, 0xd7, 0x68, 0x4a, 0x83, 0x47, 0x2, 0x37, 0xae, 0xe1, 0x7e, 0xca, 0xc5, 0xac, 0x2, 0x83, 0xe7, 0xaa, 0xb9, 0x7, 0x8, 0x4d, 0xad, 0x6b}},
    { .phrase = "reopen obey myth burger loud wisdom flight vast response mutual today bag",
      .seed = {0xe6, 0xec, 0xab, 0x97, 0x3, 0x62, 0x2d, 0x60, 0x31, 0x83, 0x2e, 0x2f, 0x2a, 0x7a, 0xaf, 0xd, 0x21, 0xf0, 0x27, 0xf5, 0x28, 0x32, 0xea, 0x73, 0x68, 0x88, 0xc1, 0x9b, 0x5c, 0x0a, 0xf7, 0x9f, 0x54, 0xca, 0x91, 0xdb, 0x80, 0xcd, 0x6a, 0xd2, 0x9e, 0x8, 0xa1, 0x4e, 0xb2, 0x8d, 0x88, 0x17, 0xfd, 0x53, 0x7c, 0x62, 0x3d, 0x32, 0xe1, 0x5b, 0xd, 0xb7, 0x20, 0xd1, 0x35, 0x1c, 0x51, 0xef}},
    { .phrase = "auto sand fence spread husband model inspire wisdom lift thunder winter jeans",
      .seed = {0xd8, 0x62, 0x78, 0x82, 0x8c, 0x79, 0xab, 0x37, 0xc, 0x67, 0xe6, 0xac, 0xc5, 0x33, 0xc9, 0x54, 0x47, 0xd9, 0x65, 0x99, 0x71, 0x3c, 0xd1, 0x76, 0x8, 0x4e, 0x5d, 0xef, 0x5, 0xd1, 0x6f, 0xea, 0xcd, 0x90, 0xec, 0xf, 0xfa, 0x1b, 0x75, 0xbd, 0x7c, 0x98, 0xae, 0x9e, 0x99, 0xa1, 0x89, 0x8b, 0x58, 0x78, 0x35, 0x4f, 0x8d, 0x1d, 0x86, 0x43, 0x69, 0xa9, 0xef, 0xb3, 0xc7, 0xb8, 0x9c, 0x89}},
    { .phrase = "begin blame airport this trap real essence invest admit retire deer",
      .seed = {0x5e, 0xdb, 0x3, 0x6d, 0x36, 0x48, 0xc3, 0x9d, 0xe9, 0x79, 0xab, 0x8e, 0xab, 0x60, 0x33, 0x8c, 0x9a, 0x12, 0xf6, 0x59, 0x64, 0x44, 0xae, 0x9a, 0xcb, 0xac, 0xb1, 0xf0, 0x44, 0x94, 0x74, 0xce, 0xc2, 0x26, 0xe4, 0x58, 0x24, 0x5a, 0x70, 0x6c, 0x40, 0xcf, 0xfc, 0x1e, 0x46, 0xf5, 0x97, 0x6e, 0x81, 0xd4, 0xf9, 0xbf, 0xfd, 0xa1, 0xa4, 0x89, 0x28, 0x3b, 0x96, 0xb4, 0xcd, 0x2d, 0x83, 0x62}},
    { .phrase = "goat sun unable sheriff become require coyote immune ranch foot gospel  river",
      .seed = {0xf2, 0x9, 0x4a, 0x3, 0x5, 0x95, 0x85, 0xce, 0x5b, 0xc6, 0xf1, 0x7a, 0x8b, 0x4c, 0x3b, 0xb4, 0x8d, 0x9f, 0x87, 0xc7, 0x0, 0x73, 0x8c, 0x41, 0x41, 0x3e, 0x13, 0xf9, 0x7a, 0x69, 0x45, 0x44, 0x2d, 0x18, 0xea, 0x1e, 0xf2, 0x9a, 0x25, 0x9f, 0xb9, 0xe0, 0x9b, 0xeb, 0xc7, 0xdc, 0x57, 0xa8, 0x6e, 0xc3, 0x27, 0x71, 0xba, 0xf1, 0xb, 0x14, 0x79, 0xa6, 0x7a, 0x98, 0xdd, 0xcf, 0xd3, 0x14}},
    { .phrase = "situate leaf frequent  memory timber  multiply ethics cake sorry earth corn such",
      .seed = {0x88, 0x28, 0x71, 0x2f, 0xcb, 0x63, 0x7b, 0x8d, 0xc5, 0xa3, 0xbb, 0x7f, 0xc8, 0x52, 0x75, 0x6b, 0xa3, 0x18, 0x6d, 0x29, 0x2, 0x18, 0xfa, 0x45, 0xf9, 0x42, 0xc3, 0xc2, 0x10, 0x4a, 0x5e, 0x90, 0x4b, 0x4, 0x71, 0x56, 0x55, 0x4, 0x76, 0xdb, 0xf6, 0x82, 0x82, 0x60, 0xc3, 0xc9, 0x54, 0x84, 0x75, 0xbf, 0xa5, 0x82, 0xb5, 0x38, 0x26, 0xc6, 0x77, 0x5e, 0xc2, 0x95, 0x3b, 0xe4, 0x5a, 0xdd}}
};

void printTestData(struct TestData td) {
    printf("\n   - phrase: %s", td.phrase);
}

int compareSeeds(uint8_t *seed1, uint8_t *seed2) {
    for (size_t i = 0; i < SEED_LEN; ++i) {
        if (seed1[i] != seed2[i]) {
            return 0;
        }
    }
    return 1;
}

void printSeed(uint8_t *seed) {
    for (size_t i = 0; i < SEED_LEN; ++i) {
        printf("0x%x, ", seed[i]);
    }
}

int main() {
    uint8_t outSeed[SEED_LEN];
    int globalPassed = 1;

    BIP39Mnemonic bip39;
    
    for (int i = 0; i < sizeof(testDataGood) / sizeof(struct TestData); ++i) {
        memset(outSeed, 0, SEED_LEN);
        
        bip39.DeriveKey(outSeed, testDataGood[i].phrase, PASS_PHRASE);
        
        int passed = compareSeeds(outSeed, testDataGood[i].seed);
        
        printf("\nTesting good phrase %d: ", i);
        
        printTestData(testDataGood[i]);
        
        if (!passed) {
            printf("\n   - required seed: ");
            printSeed(testDataGood[i].seed);
            printf("\n   - got seed: ");
            printSeed(outSeed);
        }
        
        if (passed) {
            printf("\n\x1b[32mPASSED\x1b[0m\n");
        } else {
            printf("\n\x1b[31mFAILED\x1b[0m\n");
        }
        
        if (!passed) {
            globalPassed = 0;
        }
    }
    
    for (int i = 0; i < sizeof(testDataBad) / sizeof(struct TestData); ++i) {
        memset(outSeed, 0, SEED_LEN);
        
        bip39.DeriveKey(outSeed, testDataBad[i].phrase, PASS_PHRASE);
        
        int passed = (compareSeeds(outSeed, testDataBad[i].seed) == 0);
        
        printf("\nTesting bad phrase %d: ", i);
        
        printTestData(testDataBad[i]);
        
        if (!passed) {
            printf("\n   - required seed: ");
            printSeed(testDataBad[i].seed);
            printf("\n   - got seed: ");
            printSeed(outSeed);
        }
        
        if (passed) {
            printf("\n\x1b[32mPASSED\x1b[0m\n");
        } else {
            printf("\n\x1b[31mFAILED\x1b[0m\n");
        }
        
        if (!passed) {
            globalPassed = 0;
        }
    }
    
    if (globalPassed) {
        printf("\n\x1b[32mTest successful\x1b[0m\n");
    } else {
        printf("\n\x1b[31mSee errors above!\x1b[0m\n");
    }
}
